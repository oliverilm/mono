{"version":3,"file":"LlmSchemaComposer.mjs","sources":["../../src/composers/LlmSchemaComposer.ts"],"sourcesContent":["import { IChatGptSchema } from \"../structures/IChatGptSchema\";\nimport { IClaudeSchema } from \"../structures/IClaudeSchema\";\nimport { IGeminiSchema } from \"../structures/IGeminiSchema\";\nimport { ILlamaSchema } from \"../structures/ILlamaSchema\";\nimport { ILlmSchema } from \"../structures/ILlmSchema\";\nimport { ILlmSchemaV3 } from \"../structures/ILlmSchemaV3\";\nimport { ILlmSchemaV3_1 } from \"../structures/ILlmSchemaV3_1\";\nimport { ChatGptTypeChecker } from \"../utils/ChatGptTypeChecker\";\nimport { ClaudeTypeChecker } from \"../utils/ClaudeTypeChecker\";\nimport { GeminiTypeChecker } from \"../utils/GeminiTypeChecker\";\nimport { LlamaTypeChecker } from \"../utils/LlamaTypeChecker\";\nimport { LlmTypeCheckerV3 } from \"../utils/LlmTypeCheckerV3\";\nimport { LlmTypeCheckerV3_1 } from \"../utils/LlmTypeCheckerV3_1\";\nimport { ChatGptSchemaComposer } from \"./llm/ChatGptSchemaComposer\";\nimport { ClaudeSchemaComposer } from \"./llm/ClaudeSchemaComposer\";\nimport { GeminiSchemaComposer } from \"./llm/GeminiSchemaComposer\";\nimport { LlamaSchemaComposer } from \"./llm/LlamaSchemaComposer\";\nimport { LlmSchemaV3Composer } from \"./llm/LlmSchemaV3Composer\";\nimport { LlmSchemaV3_1Composer } from \"./llm/LlmSchemaV3_1Composer\";\n\nexport namespace LlmSchemaComposer {\n  export const parameters = <Model extends ILlmSchema.Model>(model: Model) =>\n    PARAMETERS_CASTERS[model];\n\n  export const schema = <Model extends ILlmSchema.Model>(model: Model) =>\n    SCHEMA_CASTERS[model];\n\n  export const defaultConfig = <Model extends ILlmSchema.Model>(model: Model) =>\n    DEFAULT_CONFIGS[model];\n\n  export const typeChecker = <Model extends ILlmSchema.Model>(model: Model) =>\n    TYPE_CHECKERS[model];\n\n  export const separateParameters = <Model extends ILlmSchema.Model>(\n    model: Model,\n  ) => SEPARATE_PARAMETERS[model];\n}\n\nconst PARAMETERS_CASTERS = {\n  chatgpt: ChatGptSchemaComposer.parameters,\n  claude: ClaudeSchemaComposer.parameters,\n  gemini: GeminiSchemaComposer.parameters,\n  llama: LlamaSchemaComposer.parameters,\n  \"3.0\": LlmSchemaV3Composer.parameters,\n  \"3.1\": LlmSchemaV3_1Composer.parameters,\n};\n\nconst SCHEMA_CASTERS = {\n  chatgpt: ChatGptSchemaComposer.schema,\n  claude: ClaudeSchemaComposer.schema,\n  gemini: GeminiSchemaComposer.schema,\n  llama: LlamaSchemaComposer.schema,\n  \"3.0\": LlmSchemaV3Composer.schema,\n  \"3.1\": LlmSchemaV3_1Composer.schema,\n};\n\nconst SEPARATE_PARAMETERS = {\n  chatgpt: ChatGptSchemaComposer.separateParameters,\n  claude: ClaudeSchemaComposer.separateParameters,\n  gemini: GeminiSchemaComposer.separateParameters,\n  llama: LlamaSchemaComposer.separateParameters,\n  \"3.0\": LlmSchemaV3Composer.separateParameters,\n  \"3.1\": LlmSchemaV3_1Composer.separateParameters,\n};\n\nconst DEFAULT_CONFIGS = {\n  chatgpt: {\n    reference: false,\n  } satisfies IChatGptSchema.IConfig,\n  claude: {\n    reference: false,\n  } satisfies IClaudeSchema.IConfig,\n  gemini: {\n    recursive: 3,\n  } satisfies IGeminiSchema.IConfig,\n  llama: {\n    reference: false,\n  } satisfies ILlamaSchema.IConfig,\n  \"3.0\": {\n    constraint: true,\n    recursive: 3,\n  } satisfies ILlmSchemaV3.IConfig,\n  \"3.1\": {\n    constraint: true,\n    reference: false,\n  } satisfies ILlmSchemaV3_1.IConfig,\n};\n\nconst TYPE_CHECKERS = {\n  chatgpt: ChatGptTypeChecker,\n  claude: ClaudeTypeChecker,\n  gemini: GeminiTypeChecker,\n  llama: LlamaTypeChecker,\n  \"3.0\": LlmTypeCheckerV3,\n  \"3.1\": LlmTypeCheckerV3_1,\n};\n"],"names":["LlmSchemaComposer","parameters","model","PARAMETERS_CASTERS","schema","SCHEMA_CASTERS","defaultConfig","DEFAULT_CONFIGS","typeChecker","TYPE_CHECKERS","separateParameters","SEPARATE_PARAMETERS","chatgpt","ChatGptSchemaComposer","claude","ClaudeSchemaComposer","gemini","GeminiSchemaComposer","llama","LlamaSchemaComposer","LlmSchemaV3Composer","LlmSchemaV3_1Composer","reference","recursive","constraint","ChatGptTypeChecker","ClaudeTypeChecker","GeminiTypeChecker","LlamaTypeChecker","LlmTypeCheckerV3","LlmTypeCheckerV3_1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAoBM,IAAWA;;CAAjB,SAAiBA;IACFA,kBAAUC,aAAoCC,SACzDC,mBAAmBD;IAERF,kBAAMI,SAAoCF,SACrDG,eAAeH;IAEJF,kBAAaM,gBAAoCJ,SAC5DK,gBAAgBL;IAELF,kBAAWQ,cAAoCN,SAC1DO,cAAcP;IAEHF,kBAAkBU,qBAC7BR,SACGS,oBAAoBT;AAC1B,EAhBD,CAAiBF,sBAAAA,oBAgBhB,CAAA;;AAED,MAAMG,qBAAqB;IACzBS,SAASC,sBAAsBZ;IAC/Ba,QAAQC,qBAAqBd;IAC7Be,QAAQC,qBAAqBhB;IAC7BiB,OAAOC,oBAAoBlB;IAC3B,OAAOmB,oBAAoBnB;IAC3B,KAAOoB,sBAAsBpB;;;AAG/B,MAAMI,iBAAiB;IACrBO,SAASC,sBAAsBT;IAC/BU,QAAQC,qBAAqBX;IAC7BY,QAAQC,qBAAqBb;IAC7Bc,OAAOC,oBAAoBf;IAC3B,OAAOgB,oBAAoBhB;IAC3B,KAAOiB,sBAAsBjB;;;AAG/B,MAAMO,sBAAsB;IAC1BC,SAASC,sBAAsBH;IAC/BI,QAAQC,qBAAqBL;IAC7BM,QAAQC,qBAAqBP;IAC7BQ,OAAOC,oBAAoBT;IAC3B,OAAOU,oBAAoBV;IAC3B,KAAOW,sBAAsBX;;;AAG/B,MAAMH,kBAAkB;IACtBK,SAAS;QACPU,WAAW;;IAEbR,QAAQ;QACNQ,WAAW;;IAEbN,QAAQ;QACNO,WAAW;;IAEbL,OAAO;QACLI,WAAW;;IAEb,OAAO;QACLE,YAAY;QACZD,WAAW;;IAEb,KAAO;QACLC,YAAY;QACZF,WAAW;;;;AAIf,MAAMb,gBAAgB;IACpBG,SAASa;IACTX,QAAQY;IACRV,QAAQW;IACRT,OAAOU;IACP,OAAOC;IACP,KAAOC;;;"}