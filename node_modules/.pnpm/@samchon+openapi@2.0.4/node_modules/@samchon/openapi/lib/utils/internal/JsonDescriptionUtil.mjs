var JsonDescriptionUtil;

(function(JsonDescriptionUtil) {
    JsonDescriptionUtil.cascade = props => {
        const index = props.$ref.lastIndexOf(".");
        if (index === -1) return props.description;
        const accessors = props.$ref.split(props.prefix)[1].split(".");
        const pReferences = accessors.slice(0, props.escape ? accessors.length : accessors.length - 1).map(((_, i, array) => array.slice(0, i + 1).join("."))).map((key => ({
            key,
            description: props.components.schemas?.[key]?.description
        }))).filter((schema => !!schema?.description)).reverse();
        if (pReferences.length === 0) return props.description;
        return [ ...props.description?.length ? [ props.description ] : [], ...pReferences.map(((pRef, i) => `Description of the ${i === 0 && props.escape ? "current" : "parent"} {@link ${pRef.key}} type:\n\n` + pRef.description.split("\n").map((str => `> ${str}`)).join("\n"))) ].join("\n\n------------------------------\n\n");
    };
})(JsonDescriptionUtil || (JsonDescriptionUtil = {}));

export { JsonDescriptionUtil };
//# sourceMappingURL=JsonDescriptionUtil.mjs.map
