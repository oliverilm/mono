"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OpenApiContraintShifter = void 0;
var OpenApiContraintShifter;
(function (OpenApiContraintShifter) {
    OpenApiContraintShifter.shiftArray = function (v) {
        var tags = [];
        if (v.minItems !== undefined) {
            tags.push("@minItems ".concat(v.minItems));
            delete v.minItems;
        }
        if (v.maxItems !== undefined) {
            tags.push("@maxItems ".concat(v.maxItems));
            delete v.maxItems;
        }
        if (v.uniqueItems !== undefined) {
            if (v.uniqueItems === true)
                tags.push("@uniqueItems");
            delete v.uniqueItems;
        }
        v.description = writeTagWithDescription({
            description: v.description,
            tags: tags,
        });
        return v;
    };
    OpenApiContraintShifter.shiftNumeric = function (v) {
        var tags = [];
        if (v.minimum !== undefined) {
            tags.push("@minimum ".concat(v.minimum));
            delete v.minimum;
        }
        if (v.maximum !== undefined) {
            tags.push("@maximum ".concat(v.maximum));
            delete v.maximum;
        }
        if (v.exclusiveMinimum !== undefined) {
            tags.push("@exclusiveMinimum ".concat(v.exclusiveMinimum));
            delete v.exclusiveMinimum;
        }
        if (v.exclusiveMaximum !== undefined) {
            tags.push("@exclusiveMaximum ".concat(v.exclusiveMaximum));
            delete v.exclusiveMaximum;
        }
        if (v.multipleOf !== undefined) {
            tags.push("@multipleOf ".concat(v.multipleOf));
            delete v.multipleOf;
        }
        if (v.default !== undefined) {
            tags.push("@default ".concat(v.default));
            delete v.default;
        }
        v.description = writeTagWithDescription({
            description: v.description,
            tags: tags,
        });
        return v;
    };
    OpenApiContraintShifter.shiftString = function (v) {
        var tags = [];
        if (v.minLength !== undefined) {
            tags.push("@minLength ".concat(v.minLength));
            delete v.minLength;
        }
        if (v.maxLength !== undefined) {
            tags.push("@maxLength ".concat(v.maxLength));
            delete v.maxLength;
        }
        if (v.format !== undefined) {
            tags.push("@format ".concat(v.format));
            delete v.format;
        }
        if (v.pattern !== undefined) {
            tags.push("@pattern ".concat(v.pattern));
            delete v.pattern;
        }
        if (v.contentMediaType !== undefined) {
            tags.push("@contentMediaType ".concat(v.contentMediaType));
            delete v.contentMediaType;
        }
        if (v.default !== undefined) {
            tags.push("@default ".concat(v.default));
            delete v.default;
        }
        v.description = writeTagWithDescription({
            description: v.description,
            tags: tags,
        });
        return v;
    };
})(OpenApiContraintShifter || (exports.OpenApiContraintShifter = OpenApiContraintShifter = {}));
var writeTagWithDescription = function (props) {
    var _a;
    if (props.tags.length === 0)
        return props.description;
    return __spreadArray(__spreadArray([], __read((((_a = props.description) === null || _a === void 0 ? void 0 : _a.length) ? [props.description, "\n"] : [])), false), __read(props.tags), false).join("\n");
};
