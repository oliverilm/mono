var LlmTypeCheckerV3;

(function(LlmTypeCheckerV3) {
    LlmTypeCheckerV3.visit = props => {
        const accessor = props.accessor ?? "$input.schema";
        props.closure(props.schema, accessor);
        if (LlmTypeCheckerV3.isOneOf(props.schema)) props.schema.oneOf.forEach(((s, i) => LlmTypeCheckerV3.visit({
            closure: props.closure,
            schema: s,
            accessor: `${accessor}.oneOf[${i}]`
        }))); else if (LlmTypeCheckerV3.isObject(props.schema)) {
            for (const [k, s] of Object.entries(props.schema.properties)) LlmTypeCheckerV3.visit({
                closure: props.closure,
                schema: s,
                accessor: `${accessor}.properties[${JSON.stringify(k)}]`
            });
            if (typeof props.schema.additionalProperties === "object" && props.schema.additionalProperties !== null) LlmTypeCheckerV3.visit({
                closure: props.closure,
                schema: props.schema.additionalProperties,
                accessor: `${accessor}.additionalProperties`
            });
        } else if (LlmTypeCheckerV3.isArray(props.schema)) LlmTypeCheckerV3.visit({
            closure: props.closure,
            schema: props.schema.items,
            accessor: `${accessor}.items`
        });
    };
    LlmTypeCheckerV3.isOneOf = schema => schema.oneOf !== undefined;
    LlmTypeCheckerV3.isObject = schema => schema.type === "object";
    LlmTypeCheckerV3.isArray = schema => schema.type === "array";
    LlmTypeCheckerV3.isBoolean = schema => schema.type === "boolean";
    LlmTypeCheckerV3.isInteger = schema => schema.type === "integer";
    LlmTypeCheckerV3.isNumber = schema => schema.type === "number";
    LlmTypeCheckerV3.isString = schema => schema.type === "string";
    LlmTypeCheckerV3.isNullOnly = schema => schema.type === "null";
    LlmTypeCheckerV3.isNullable = schema => !LlmTypeCheckerV3.isUnknown(schema) && (LlmTypeCheckerV3.isNullOnly(schema) || (LlmTypeCheckerV3.isOneOf(schema) ? schema.oneOf.some(LlmTypeCheckerV3.isNullable) : schema.nullable === true));
    LlmTypeCheckerV3.isUnknown = schema => !LlmTypeCheckerV3.isOneOf(schema) && schema.type === undefined;
})(LlmTypeCheckerV3 || (LlmTypeCheckerV3 = {}));

export { LlmTypeCheckerV3 };
//# sourceMappingURL=LlmTypeCheckerV3.mjs.map
