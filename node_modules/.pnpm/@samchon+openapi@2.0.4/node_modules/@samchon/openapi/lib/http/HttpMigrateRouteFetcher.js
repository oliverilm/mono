"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpMigrateRouteFetcher = void 0;
var HttpError_1 = require("./HttpError");
var HttpMigrateRouteFetcher;
(function (HttpMigrateRouteFetcher) {
    var _this = this;
    HttpMigrateRouteFetcher.execute = function (props) { return __awaiter(_this, void 0, void 0, function () {
        var result;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, _Propagate("request", props)];
                case 1:
                    result = _b.sent();
                    (_a = props.route.success) === null || _a === void 0 ? void 0 : _a.media;
                    if (result.status !== 200 && result.status !== 201)
                        throw new HttpError_1.HttpError(props.route.method.toUpperCase(), props.route.path, result.status, result.headers, result.body);
                    return [2 /*return*/, result.body];
            }
        });
    }); };
    HttpMigrateRouteFetcher.propagate = function (props) { return _Propagate("propagate", props); };
})(HttpMigrateRouteFetcher || (exports.HttpMigrateRouteFetcher = HttpMigrateRouteFetcher = {}));
var _Propagate = function (from, props) { return __awaiter(void 0, void 0, void 0, function () {
    var error, headers, init, path, url, response, status, out, _a, text, _b, _c, _d, type, _e, _f, _g, _h, _j, _k, _l;
    var _m, _o, _p, _q, _r, _s, _t, _u, _v;
    return __generator(this, function (_w) {
        switch (_w.label) {
            case 0:
                error = function (message) {
                    return new Error("Error on MigrateRouteFetcher.".concat(from, "(): ").concat(message));
                };
                if (Array.isArray(props.parameters)) {
                    if (props.route.parameters.length !== props.parameters.length)
                        throw error("number of parameters is not matched.");
                }
                else if (props.route.parameters.every(function (p) { return props.parameters[p.key] !== undefined; }) === false)
                    throw error("number of parameters is not matched.");
                // VALIDATE QUERY
                if (!!props.route.query !== !!props.query)
                    throw error("query is not matched.");
                else if (!!props.route.body !== (props.body !== undefined))
                    throw error("body is not matched.");
                headers = __assign(__assign({}, ((_m = props.connection.headers) !== null && _m !== void 0 ? _m : {})), (((_o = props.route.body) === null || _o === void 0 ? void 0 : _o.type) &&
                    props.route.body.type !== "multipart/form-data"
                    ? { "Content-Type": props.route.body.type }
                    : {}));
                init = __assign(__assign({}, ((_p = props.connection.options) !== null && _p !== void 0 ? _p : {})), { method: props.route.method.toUpperCase(), headers: (function () {
                        var e_1, _a, e_2, _b;
                        var output = [];
                        try {
                            for (var _c = __values(Object.entries(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var _e = __read(_d.value, 2), key = _e[0], value = _e[1];
                                if (value === undefined)
                                    continue;
                                else if (Array.isArray(value))
                                    try {
                                        for (var value_1 = (e_2 = void 0, __values(value)), value_1_1 = value_1.next(); !value_1_1.done; value_1_1 = value_1.next()) {
                                            var v = value_1_1.value;
                                            output.push([key, String(v)]);
                                        }
                                    }
                                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                                    finally {
                                        try {
                                            if (value_1_1 && !value_1_1.done && (_b = value_1.return)) _b.call(value_1);
                                        }
                                        finally { if (e_2) throw e_2.error; }
                                    }
                                else
                                    output.push([key, String(value)]);
                            }
                        }
                        catch (e_1_1) { e_1 = { error: e_1_1 }; }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                            }
                            finally { if (e_1) throw e_1.error; }
                        }
                        return output;
                    })() });
                if (props.body !== undefined)
                    init.body = (((_q = props.route.body) === null || _q === void 0 ? void 0 : _q.type) === "application/x-www-form-urlencoded"
                        ? requestQueryBody(props.body)
                        : ((_r = props.route.body) === null || _r === void 0 ? void 0 : _r.type) === "multipart/form-data"
                            ? requestFormDataBody(props.body)
                            : ((_s = props.route.body) === null || _s === void 0 ? void 0 : _s.type) === "application/json"
                                ? JSON.stringify(props.body)
                                : props.body);
                path = props.connection.host[props.connection.host.length - 1] !== "/" &&
                    props.route.path[0] !== "/"
                    ? "/".concat(getPath(props))
                    : getPath(props);
                url = new URL("".concat(props.connection.host, "/").concat(path));
                return [4 /*yield*/, ((_t = props.connection.fetch) !== null && _t !== void 0 ? _t : fetch)(url, init)];
            case 1:
                response = _w.sent();
                status = response.status;
                out = function (body) { return ({
                    status: status,
                    headers: responseHeaders(response.headers),
                    body: body,
                }); };
                if (!(status === 200 || status === 201)) return [3 /*break*/, 11];
                if (!(props.route.method.toUpperCase() === "HEAD")) return [3 /*break*/, 2];
                return [2 /*return*/, out(undefined)];
            case 2:
                if (!(props.route.success === null ||
                    props.route.success.type === "text/plain")) return [3 /*break*/, 4];
                _a = out;
                return [4 /*yield*/, response.text()];
            case 3: return [2 /*return*/, _a.apply(void 0, [_w.sent()])];
            case 4:
                if (!(props.route.success.type === "application/json")) return [3 /*break*/, 6];
                return [4 /*yield*/, response.text()];
            case 5:
                text = _w.sent();
                return [2 /*return*/, out(text.length ? JSON.parse(text) : undefined)];
            case 6:
                if (!(props.route.success.type === "application/x-www-form-urlencoded")) return [3 /*break*/, 8];
                _b = out;
                _c = URLSearchParams.bind;
                return [4 /*yield*/, response.text()];
            case 7: return [2 /*return*/, _b.apply(void 0, [new (_c.apply(URLSearchParams, [void 0, _w.sent()]))()])];
            case 8:
                if (!(props.route.success.type === "multipart/form-data")) return [3 /*break*/, 10];
                _d = out;
                return [4 /*yield*/, response.formData()];
            case 9: return [2 /*return*/, _d.apply(void 0, [_w.sent()])];
            case 10: throw error("Unsupported response body type.");
            case 11:
                type = ((_v = (_u = response.headers.get("content-type")) !== null && _u !== void 0 ? _u : response.headers.get("Content-Type")) !== null && _v !== void 0 ? _v : "")
                    .split(";")[0]
                    .trim();
                if (!(type === "" || type.startsWith("text/"))) return [3 /*break*/, 13];
                _e = out;
                return [4 /*yield*/, response.text()];
            case 12: return [2 /*return*/, _e.apply(void 0, [_w.sent()])];
            case 13:
                if (!(type === "application/json")) return [3 /*break*/, 15];
                _f = out;
                return [4 /*yield*/, response.json()];
            case 14: return [2 /*return*/, _f.apply(void 0, [_w.sent()])];
            case 15:
                if (!(type === "application/x-www-form-urlencoded")) return [3 /*break*/, 17];
                _g = out;
                _h = URLSearchParams.bind;
                return [4 /*yield*/, response.text()];
            case 16: return [2 /*return*/, _g.apply(void 0, [new (_h.apply(URLSearchParams, [void 0, _w.sent()]))()])];
            case 17:
                if (!(type === "multipart/form-data")) return [3 /*break*/, 19];
                _j = out;
                return [4 /*yield*/, response.formData()];
            case 18: return [2 /*return*/, _j.apply(void 0, [_w.sent()])];
            case 19:
                if (!(type === "application/octet-stream")) return [3 /*break*/, 21];
                _k = out;
                return [4 /*yield*/, response.blob()];
            case 20: return [2 /*return*/, _k.apply(void 0, [_w.sent()])];
            case 21:
                _l = out;
                return [4 /*yield*/, response.text()];
            case 22: return [2 /*return*/, _l.apply(void 0, [_w.sent()])];
        }
    });
}); };
var getPath = function (props) {
    var _a;
    var path = props.route.emendedPath;
    props.route.parameters.forEach(function (p, i) {
        var _a;
        path = path.replace(":".concat(p.key), encodeURIComponent(String((_a = (Array.isArray(props.parameters)
            ? props.parameters[i]
            : props.parameters[p.key])) !== null && _a !== void 0 ? _a : "null")));
    });
    if (props.route.query)
        path += getQueryPath((_a = props.query) !== null && _a !== void 0 ? _a : {});
    return path;
};
var getQueryPath = function (query) {
    var e_3, _a;
    var variables = new URLSearchParams();
    var _loop_1 = function (key, value) {
        if (undefined === value)
            return "continue";
        else if (Array.isArray(value))
            value.forEach(function (elem) { return variables.append(key, String(elem)); });
        else
            variables.set(key, String(value));
    };
    try {
        for (var _b = __values(Object.entries(query)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
            _loop_1(key, value);
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_3) throw e_3.error; }
    }
    return 0 === variables.size ? "" : "?".concat(variables.toString());
};
var requestQueryBody = function (input) {
    var e_4, _a;
    var q = new URLSearchParams();
    var _loop_2 = function (key, value) {
        if (value === undefined)
            return "continue";
        else if (Array.isArray(value))
            value.forEach(function (elem) { return q.append(key, String(elem)); });
        else
            q.set(key, String(value));
    };
    try {
        for (var _b = __values(Object.entries(input)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
            _loop_2(key, value);
        }
    }
    catch (e_4_1) { e_4 = { error: e_4_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_4) throw e_4.error; }
    }
    return q;
};
var requestFormDataBody = function (input) {
    var e_5, _a;
    var encoded = new FormData();
    var append = function (key) { return function (value) {
        if (value === undefined)
            return;
        else if (typeof File === "function" && value instanceof File)
            encoded.append(key, value, value.name);
        else
            encoded.append(key, value);
    }; };
    try {
        for (var _b = __values(Object.entries(input)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
            if (Array.isArray(value))
                value.map(append(key));
            else
                append(key)(value);
        }
    }
    catch (e_5_1) { e_5 = { error: e_5_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_5) throw e_5.error; }
    }
    return encoded;
};
var responseHeaders = function (headers) {
    var output = {};
    headers.forEach(function (value, key) {
        var _a;
        var _b;
        if (key === "set-cookie") {
            (_b = output[key]) !== null && _b !== void 0 ? _b : (output[key] = []);
            (_a = output[key]).push.apply(_a, __spreadArray([], __read(value.split(";").map(function (str) { return str.trim(); })), false));
        }
        else
            output[key] = value;
    });
    return output;
};
