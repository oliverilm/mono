"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formData = formData;
exports.assertFormData = assertFormData;
exports.isFormData = isFormData;
exports.validateFormData = validateFormData;
exports.query = query;
exports.assertQuery = assertQuery;
exports.isQuery = isQuery;
exports.validateQuery = validateQuery;
exports.headers = headers;
exports.assertHeaders = assertHeaders;
exports.isHeaders = isHeaders;
exports.validateHeaders = validateHeaders;
exports.parameter = parameter;
exports.createFormData = createFormData;
exports.createAssertFormData = createAssertFormData;
exports.createIsFormData = createIsFormData;
exports.createValidateFormData = createValidateFormData;
exports.createQuery = createQuery;
exports.createAssertQuery = createAssertQuery;
exports.createIsQuery = createIsQuery;
exports.createValidateQuery = createValidateQuery;
exports.createHeaders = createHeaders;
exports.createAssertHeaders = createAssertHeaders;
exports.createIsHeaders = createIsHeaders;
exports.createValidateHeaders = createValidateHeaders;
exports.createParameter = createParameter;
/**
 * @internal
 */
function formData() {
    halt("formData");
}
/**
 * @internal
 */
function assertFormData() {
    halt("assertFormData");
}
/**
 * @internal
 */
function isFormData() {
    halt("isFormData");
}
/**
 * @internal
 */
function validateFormData() {
    halt("validateFormData");
}
/**
 * @internal
 */
function query() {
    halt("query");
}
/**
 * @internal
 */
function assertQuery() {
    halt("assertQuery");
}
/**
 * @internal
 */
function isQuery() {
    halt("isQuery");
}
/**
 * @internal
 */
function validateQuery() {
    halt("validateQuery");
}
/**
 * @internal
 */
function headers() {
    halt("headers");
}
/**
 * @internal
 */
function assertHeaders() {
    halt("assertHeaders");
}
/**
 * @internal
 */
function isHeaders() {
    halt("isHeaders");
}
/**
 * @internal
 */
function validateHeaders() {
    halt("validateHeaders");
}
/**
 * @internal
 */
function parameter() {
    halt("parameter");
}
/**
 * @internal
 */
function createFormData() {
    halt("createFormData");
}
/**
 * @internal
 */
function createAssertFormData() {
    halt("createAssertFormData");
}
/**
 * @internal
 */
function createIsFormData() {
    halt("createIsFormData");
}
/**
 * @internal
 */
function createValidateFormData() {
    halt("createValidateFormData");
}
/**
 * @internal
 */
function createQuery() {
    halt("createQuery");
}
/**
 * @internal
 */
function createAssertQuery() {
    halt("createAssertQuery");
}
/**
 * @internal
 */
function createIsQuery() {
    halt("createIsQuery");
}
/**
 * @internal
 */
function createValidateQuery() {
    halt("createValidateQuery");
}
/**
 * @internal
 */
function createHeaders() {
    halt("createHeaders");
}
/**
 * @internal
 */
function createAssertHeaders() {
    halt("createAssertHeaders");
}
/**
 * @internal
 */
function createIsHeaders() {
    halt("createIsHeaders");
}
/**
 * @internal
 */
function createValidateHeaders() {
    halt("createValidateHeaders");
}
/**
 * @internal
 */
function createParameter() {
    halt("createParameter");
}
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.http.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}
//# sourceMappingURL=http.js.map