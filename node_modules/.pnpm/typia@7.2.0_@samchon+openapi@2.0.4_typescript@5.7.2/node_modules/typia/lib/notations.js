"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.camel = camel;
exports.assertCamel = assertCamel;
exports.isCamel = isCamel;
exports.validateCamel = validateCamel;
exports.pascal = pascal;
exports.assertPascal = assertPascal;
exports.isPascal = isPascal;
exports.validatePascal = validatePascal;
exports.snake = snake;
exports.assertSnake = assertSnake;
exports.isSnake = isSnake;
exports.validateSnake = validateSnake;
exports.createCamel = createCamel;
exports.createAssertCamel = createAssertCamel;
exports.createIsCamel = createIsCamel;
exports.createValidateCamel = createValidateCamel;
exports.createPascal = createPascal;
exports.createAssertPascal = createAssertPascal;
exports.createIsPascal = createIsPascal;
exports.createValidatePascal = createValidatePascal;
exports.createSnake = createSnake;
exports.createAssertSnake = createAssertSnake;
exports.createIsSnake = createIsSnake;
exports.createValidateSnake = createValidateSnake;
/**
 * @internal
 */
function camel() {
    return halt("camel");
}
/**
 * @internal
 */
function assertCamel() {
    return halt("assertCamel");
}
/**
 * @internal
 */
function isCamel() {
    return halt("isCamel");
}
/**
 * @internal
 */
function validateCamel() {
    return halt("validateCamel");
}
/**
 * @internal
 */
function pascal() {
    return halt("pascal");
}
/**
 * @internal
 */
function assertPascal() {
    return halt("assertPascal");
}
/**
 * @internal
 */
function isPascal() {
    return halt("isPascal");
}
/**
 * @internal
 */
function validatePascal() {
    return halt("validatePascal");
}
/**
 * @internal
 */
function snake() {
    return halt("snake");
}
/**
 * @internal
 */
function assertSnake() {
    return halt("assertSnake");
}
/**
 * @internal
 */
function isSnake() {
    return halt("isSnake");
}
/**
 * @internal
 */
function validateSnake() {
    return halt("validateSnake");
}
/**
 * @internal
 */
function createCamel() {
    halt("createCamel");
}
/**
 * @internal
 */
function createAssertCamel() {
    halt("createAssertCamel");
}
/**
 * @internal
 */
function createIsCamel() {
    halt("createIsCamel");
}
/**
 * @internal
 */
function createValidateCamel() {
    halt("createValidateCamel");
}
/**
 * @internal
 */
function createPascal() {
    halt("createPascal");
}
/**
 * @internal
 */
function createAssertPascal() {
    halt("createAssertPascal");
}
/**
 * @internal
 */
function createIsPascal() {
    halt("createIsPascal");
}
/**
 * @internal
 */
function createValidatePascal() {
    halt("createValidatePascal");
}
/**
 * @internal
 */
function createSnake() {
    halt("createSnake");
}
/**
 * @internal
 */
function createAssertSnake() {
    halt("createAssertSnake");
}
/**
 * @internal
 */
function createIsSnake() {
    halt("createIsSnake");
}
/**
 * @internal
 */
function createValidateSnake() {
    halt("createValidateSnake");
}
/**
 * @internal
 */
function halt(name) {
    throw new Error(`Error on typia.notations.${name}(): no transform has been configured. Read and follow https://typia.io/docs/setup please.`);
}
//# sourceMappingURL=notations.js.map